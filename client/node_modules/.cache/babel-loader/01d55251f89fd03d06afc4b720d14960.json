{"ast":null,"code":"var _jsxFileName = \"/Users/nat/nology/non-coursework/natsUniFullStack/client/src/context/NotificationProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Alert from \"@mui/material/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NotificationContext = /*#__PURE__*/createContext({});\n\nconst NotificationProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [snack, setSnack] = useState({\n    message: \"Test success\",\n    severity: \"success\",\n    open: true\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n      value: {\n        snack,\n        setSnack\n      },\n      children: [children, /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: snack.open,\n        autoHideDuration: 3000,\n        onClose: setSnack(snack.open = false),\n        children: /*#__PURE__*/_jsxDEV(Alert // onClose={setSnack((snack.open = false))}\n        , {\n          severity: snack.severity,\n          sx: {\n            width: \"100%\"\n          },\n          children: snack.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(NotificationProvider, \"+gSHlbZoaUz2zzz4AAt61aX7lHo=\");\n\n_c = NotificationProvider;\nexport default NotificationProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"sources":["/Users/nat/nology/non-coursework/natsUniFullStack/client/src/context/NotificationProvider.jsx"],"names":["React","createContext","useState","Snackbar","Alert","NotificationContext","NotificationProvider","children","snack","setSnack","message","severity","open","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,OAAO,MAAMC,mBAAmB,gBAAGJ,aAAa,CAAC,EAAD,CAAzC;;AAEP,MAAMK,oBAAoB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC7C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;AACjCQ,IAAAA,OAAO,EAAE,cADwB;AAEjCC,IAAAA,QAAQ,EAAE,SAFuB;AAGjCC,IAAAA,IAAI,EAAE;AAH2B,GAAD,CAAlC;AAMA,sBACE;AAAA,2BACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,MAAA,KAAK,EAAE;AAAEJ,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAArC;AAAA,iBACGF,QADH,eAEE,QAAC,QAAD;AACE,QAAA,IAAI,EAAEC,KAAK,CAACI,IADd;AAEE,QAAA,gBAAgB,EAAE,IAFpB;AAGE,QAAA,OAAO,EAAEH,QAAQ,CAAED,KAAK,CAACI,IAAN,GAAa,KAAf,CAHnB;AAAA,+BAKE,QAAC,KAAD,CACE;AADF;AAEE,UAAA,QAAQ,EAAEJ,KAAK,CAACG,QAFlB;AAGE,UAAA,EAAE,EAAE;AAAEE,YAAAA,KAAK,EAAE;AAAT,WAHN;AAAA,oBAKGL,KAAK,CAACE;AALT;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoBD,CA3BD;;GAAMJ,oB;;KAAAA,oB;AA6BN,eAAeA,oBAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Alert from \"@mui/material/Alert\";\n\nexport const NotificationContext = createContext({});\n\nconst NotificationProvider = ({ children }) => {\n  const [snack, setSnack] = useState({\n    message: \"Test success\",\n    severity: \"success\",\n    open: true,\n  });\n\n  return (\n    <>\n      <NotificationContext.Provider value={{ snack, setSnack }}>\n        {children}\n        <Snackbar\n          open={snack.open}\n          autoHideDuration={3000}\n          onClose={setSnack((snack.open = false))}\n        >\n          <Alert\n            // onClose={setSnack((snack.open = false))}\n            severity={snack.severity}\n            sx={{ width: \"100%\" }}\n          >\n            {snack.message}\n          </Alert>\n        </Snackbar>\n      </NotificationContext.Provider>\n    </>\n  );\n};\n\nexport default NotificationProvider;\n"]},"metadata":{},"sourceType":"module"}