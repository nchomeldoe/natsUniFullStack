{"ast":null,"code":"var _jsxFileName = \"/Users/nat/nology/non-coursework/nats-university/nats-university/src/components/StudentView/StudentView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Stack } from \"@mui/material\";\nimport { useMatch } from \"@reach/router\";\nimport Loader from \"react-loader-spinner\";\nimport StudentForm from './StudentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StudentView = () => {\n  _s();\n\n  const {\n    studentId\n  } = useMatch('/student/:studentId');\n  const [student, setStudent] = useState({});\n  useEffect(() => {\n    const fetchStudentData = async () => {\n      try {\n        const res = await fetch(`http://localhost:4000/api/students/${studentId}`);\n\n        if (!res.ok) {\n          throw res;\n        }\n\n        const data = await res.json();\n        console.log(\"data\", data);\n        const studentData = data.student[0];\n        console.log(\"student data\", studentData);\n        setStudent(studentData);\n      } catch (err) {\n        return {\n          error: err\n        };\n      }\n    };\n\n    fetchStudentData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: student.firstName ? /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"column\",\n        spacing: 2,\n        sx: {\n          position: \"relative\",\n          top: \"100px\",\n          alignItems: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Student view\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StudentForm, {\n        student: student\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        sx: {\n          position: \"relative\",\n          top: \"100px\",\n          alignItems: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Puff\",\n          color: \"#00BFFF\",\n          height: 100,\n          width: 100,\n          alignItems: \"center\" // timeout={3000} \n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(StudentView, \"FqDK4Q9dIaPSPQjUF5RNrw+q0mM=\", false, function () {\n  return [useMatch];\n});\n\n_c = StudentView;\nexport default StudentView;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentView\");","map":{"version":3,"sources":["/Users/nat/nology/non-coursework/nats-university/nats-university/src/components/StudentView/StudentView.jsx"],"names":["React","useEffect","useState","Container","Typography","Stack","useMatch","Loader","StudentForm","StudentView","studentId","student","setStudent","fetchStudentData","res","fetch","ok","data","json","console","log","studentData","err","error","firstName","position","top","alignItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAiCC,KAAjC,QAA8C,eAA9C;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM;AAACC,IAAAA;AAAD,MAAcJ,QAAQ,CAAC,qBAAD,CAA5B;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,gBAAgB,GAAG,YAAY;AACnC,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,sCAAqCL,SAAU,EAAjD,CAAvB;;AACA,YAAI,CAACI,GAAG,CAACE,EAAT,EAAa;AACX,gBAAMF,GAAN;AACD;;AACD,cAAMG,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAnB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB;AACA,cAAMI,WAAW,GAAGJ,IAAI,CAACN,OAAL,CAAa,CAAb,CAApB;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BC,WAA5B;AACAT,QAAAA,UAAU,CAACS,WAAD,CAAV;AACD,OAVD,CAUE,OAAOC,GAAP,EAAY;AACZ,eAAO;AAAEC,UAAAA,KAAK,EAAED;AAAT,SAAP;AACD;AACF,KAdD;;AAeAT,IAAAA,gBAAgB;AACjB,GAjBM,EAiBJ,EAjBI,CAAT;AAoBA,sBACI;AAAA,cACAF,OAAO,CAACa,SAAR,gBAAqB,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,8BACjB,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,QAAjB;AAA0B,QAAA,OAAO,EAAE,CAAnC;AAAsC,QAAA,EAAE,EAAE;AAACC,UAAAA,QAAQ,EAAE,UAAX;AAAuBC,UAAAA,GAAG,EAAE,OAA5B;AAAqCC,UAAAA,UAAU,EAAC;AAAhD,SAA1C;AAAA,+BACI,QAAC,UAAD;AAAa,UAAA,OAAO,EAAC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADiB,eAIjB,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEhB;AAAtB;AAAA;AAAA;AAAA;AAAA,cAJiB;AAAA;AAAA;AAAA;AAAA;AAAA,YAArB,gBAOE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,EAAE,EAAE;AAACc,UAAAA,QAAQ,EAAE,UAAX;AAAuBC,UAAAA,GAAG,EAAE,OAA5B;AAAqCC,UAAAA,UAAU,EAAC;AAAhD,SAAX;AAAA,+BACA,QAAC,MAAD;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAC,SAFV;AAGI,UAAA,MAAM,EAAE,GAHZ;AAII,UAAA,KAAK,EAAE,GAJX;AAKI,UAAA,UAAU,EAAC,QALf,CAMI;;AANJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AARF,mBADJ;AAwBH,CAhDD;;GAAMlB,W;UACkBH,Q;;;KADlBG,W;AAkDN,eAAeA,WAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { Container, Typography,  Stack } from \"@mui/material\";\nimport { useMatch } from \"@reach/router\";\nimport Loader from \"react-loader-spinner\";\n\nimport StudentForm from './StudentForm';\n\n\nconst StudentView = () => {\n    const {studentId} = useMatch('/student/:studentId');\n    const [student, setStudent] = useState({});\n\n    useEffect(() => {\n        const fetchStudentData = async () => {\n          try {\n            const res = await fetch(`http://localhost:4000/api/students/${studentId}`);\n            if (!res.ok) {\n              throw res;\n            }\n            const data = await res.json();\n            console.log(\"data\", data);\n            const studentData = data.student[0];\n            console.log(\"student data\", studentData);\n            setStudent(studentData);\n          } catch (err) {\n            return { error: err };\n          }\n        };\n        fetchStudentData();\n      }, []);\n\n    \n    return (\n        <>\n       {student.firstName ?  <Container maxWidth=\"md\">\n            <Stack direction=\"column\" spacing={2} sx={{position: \"relative\", top: \"100px\", alignItems:\"center\"}}>\n                <Typography  variant=\"h5\">Student view</Typography> \n            </Stack>\n            <StudentForm student={student}/>\n            \n        </Container>\n        : <Container maxWidth=\"md\"> \n            <Stack sx={{position: \"relative\", top: \"100px\", alignItems:\"center\"}}>\n            <Loader\n                type=\"Puff\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n                alignItems=\"center\"\n                // timeout={3000} \n            />\n            </Stack>\n            </Container> }\n        \n        </>\n    )\n}\n\nexport default StudentView\n"]},"metadata":{},"sourceType":"module"}