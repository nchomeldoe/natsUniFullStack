{"ast":null,"code":"var _jsxFileName = \"/Users/nat/nology/non-coursework/nats-university/nats-university/src/components/StudentForm/SubjectFormField.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Field } from \"formik\";\nimport { OutlinedInput, InputLabel, MenuItem, FormControl, Select, Chip, Box } from \"@mui/material\"; // const SubjectFormField = (name, label, helpMessage) => {\n//     return (\n//         <>\n//         <Field name={name}>\n//             {({ field, form, meta }) => (\n//             <Select label={label}>\n//                 <MenuItem>Philosophy</MenuItem>\n//             </Select>\n//             // <TextField\n//             //     {...field}\n//             //     label={label}\n//             //     sx={{ mb: 1, mr: 1 }}\n//             //     error={meta.error && meta.touched}\n//             //     helperText={meta.error && meta.touched && helpMessage}\n//             // />\n//             )}\n//         </Field>\n//         </>\n//     )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SubjectFormField = () => {\n  _s();\n\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\n  const taughtSubjects = [\"Accountancy\", \"Biology\", \"Classics\", \"Creative Writing\", \"Economics\", \"French\", \"Geography\", \"German\", \"Mathematics\", \"Philosophy\", \"Photography\"];\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setSelectedSubjects(typeof value === 'string' ? value.split(',') : value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        minWidth: 250,\n        maxWidth: 350\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Subjects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select // labelId=\"subjects-label\"\n      // id=\"subjects\"\n      , {\n        multiple: true,\n        value: selectedSubjects,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          id: \"select-multiple-chip\",\n          label: \"Subjects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 20\n        }, this),\n        renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 0.5\n          },\n          children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n            label: value\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this),\n        children: taughtSubjects.map(subject => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: subject,\n          children: subject\n        }, subject, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 47\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(SubjectFormField, \"2prWJMVsEJRn1rO2XChB2vuXYKQ=\");\n\n_c = SubjectFormField;\nexport default SubjectFormField;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubjectFormField\");","map":{"version":3,"sources":["/Users/nat/nology/non-coursework/nats-university/nats-university/src/components/StudentForm/SubjectFormField.jsx"],"names":["React","useState","Field","OutlinedInput","InputLabel","MenuItem","FormControl","Select","Chip","Box","SubjectFormField","selectedSubjects","setSelectedSubjects","taughtSubjects","handleChange","event","target","value","split","m","minWidth","maxWidth","selected","display","flexWrap","gap","map","subject"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,EAA8CC,WAA9C,EAA2DC,MAA3D,EAAmEC,IAAnE,EAAyEC,GAAzE,QAAmF,eAAnF,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAMY,cAAc,GAAG,CAAC,aAAD,EAAgB,SAAhB,EAA2B,UAA3B,EAAuC,kBAAvC,EAA2D,WAA3D,EAAwE,QAAxE,EAAkF,WAAlF,EAA+F,QAA/F,EAAyG,aAAzG,EAAwH,YAAxH,EAAsI,aAAtI,CAAvB;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,UAAM;AACJC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AADJ,QAEFF,KAFJ;AAGAH,IAAAA,mBAAmB,CACjB,OAAOK,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACC,KAAN,CAAY,GAAZ,CAA5B,GAA+CD,KAD9B,CAAnB;AAGD,GAPH;;AASA,sBACI;AAAA,2BACA,QAAC,WAAD;AAAa,MAAA,EAAE,EAAE;AAAEE,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,QAAQ,EAAE,GAAlB;AAAuBC,QAAAA,QAAQ,EAAE;AAAjC,OAAjB;AAAA,8BACA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAGA,QAAC,MAAD,CACI;AACA;AAFJ;AAGI,QAAA,QAAQ,MAHZ;AAII,QAAA,KAAK,EAAEV,gBAJX;AAKI,QAAA,QAAQ,EAAEG,YALd;AAMI,QAAA,KAAK,eAAE,QAAC,aAAD;AAAe,UAAA,EAAE,EAAC,sBAAlB;AAAyC,UAAA,KAAK,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBANX;AAOI,QAAA,WAAW,EAAGQ,QAAD,iBACT,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEC,YAAAA,OAAO,EAAE,MAAX;AAAmBC,YAAAA,QAAQ,EAAE,MAA7B;AAAqCC,YAAAA,GAAG,EAAE;AAA1C,WAAT;AAAA,oBACKH,QAAQ,CAACI,GAAT,CAAcT,KAAD,iBACd,QAAC,IAAD;AAAkB,YAAA,KAAK,EAAEA;AAAzB,aAAWA,KAAX;AAAA;AAAA;AAAA;AAAA,kBADC;AADL;AAAA;AAAA;AAAA;AAAA,gBARR;AAAA,kBAeKJ,cAAc,CAACa,GAAf,CAAoBC,OAAD,iBAAc,QAAC,QAAD;AAAwB,UAAA,KAAK,EAAEA,OAA/B;AAAA,oBAAyCA;AAAzC,WAAeA,OAAf;AAAA;AAAA;AAAA;AAAA,gBAAjC;AAfL;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAyBH,CAtCD;;GAAMjB,gB;;KAAAA,gB;AAuCN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Field } from \"formik\";\nimport { OutlinedInput, InputLabel, MenuItem, FormControl, Select, Chip, Box} from \"@mui/material\";\n\n// const SubjectFormField = (name, label, helpMessage) => {\n//     return (\n//         <>\n//         <Field name={name}>\n//             {({ field, form, meta }) => (\n                \n//             <Select label={label}>\n//                 <MenuItem>Philosophy</MenuItem>\n//             </Select>\n//             // <TextField\n//             //     {...field}\n//             //     label={label}\n//             //     sx={{ mb: 1, mr: 1 }}\n//             //     error={meta.error && meta.touched}\n//             //     helperText={meta.error && meta.touched && helpMessage}\n//             // />\n            \n\n//             )}\n//         </Field>\n//         </>\n//     )\n// }\n\nconst SubjectFormField = () => {\n    const [selectedSubjects, setSelectedSubjects] = useState([])\n    const taughtSubjects = [\"Accountancy\", \"Biology\", \"Classics\", \"Creative Writing\", \"Economics\", \"French\", \"Geography\", \"German\", \"Mathematics\", \"Philosophy\", \"Photography\"]\n\n    const handleChange = (event) => {\n        const {\n          target: { value },\n        } = event;\n        setSelectedSubjects(\n          typeof value === 'string' ? value.split(',') : value,\n        );\n      };\n\n    return (\n        <>\n        <FormControl sx={{ m: 1, minWidth: 250, maxWidth: 350}}>\n        <InputLabel>Subjects</InputLabel>\n        {/* id=\"subjects-label\" */}\n        <Select \n            // labelId=\"subjects-label\"\n            // id=\"subjects\"\n            multiple\n            value={selectedSubjects}\n            onChange={handleChange}\n            input={<OutlinedInput id=\"select-multiple-chip\" label=\"Subjects\" />} \n            renderValue={(selected) => (\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                    {selected.map((value) => (\n                    <Chip key={value} label={value} />\n                    ))}\n                </Box>\n                 )}\n            >\n            {taughtSubjects.map((subject) => (<MenuItem key={subject} value={subject}>{subject}</MenuItem>))}\n        </Select>\n        </FormControl>\n        </>\n    )\n}\nexport default SubjectFormField\n"]},"metadata":{},"sourceType":"module"}