{"ast":null,"code":"var _jsxFileName = \"/Users/nat/nology/non-coursework/nats-university/nats-university/src/components/StudentForm/SubjectFormField.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Field } from \"formik\";\nimport { OutlinedInput, InputLabel, MenuItem, FormControl, Select, Chip, Box } from \"@mui/material\"; // const SubjectFormField = (name, label, helpMessage) => {\n//     return (\n//         <>\n//         <Field name={name}>\n//             {({ field, form, meta }) => (\n//             <Select label={label}>\n//                 <MenuItem>Philosophy</MenuItem>\n//             </Select>\n//             // <TextField\n//             //     {...field}\n//             //     label={label}\n//             //     sx={{ mb: 1, mr: 1 }}\n//             //     error={meta.error && meta.touched}\n//             //     helperText={meta.error && meta.touched && helpMessage}\n//             // />\n//             )}\n//         </Field>\n//         </>\n//     )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SubjectFormField = () => {\n  _s();\n\n  const [selectedSubjects, setSelectedSubjects] = useState([\"Classics\", \"Economics\"]);\n  const subjects = [\"Accountancy\", \"Biology\", \"Classics\", \"Creative Writing\", \"Economics\", \"French\", \"Geography\", \"German\", \"Mathematics\", \"Philosophy\", \"Photography\"];\n  const selected = [\"Classics\", \"Economics\"]; // const ITEM_HEIGHT = 48;\n  // const ITEM_PADDING_TOP = 8;\n  // const MenuProps = {\n  //     PaperProps: {\n  //     style: {\n  //      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n  //      width: 250,\n  //         },\n  //     },\n  // };\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setSelectedSubjects(typeof value === 'string' ? value.split(',') : value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      labelId: \"subjects-label\",\n      id: \"subjects\",\n      multiple: true,\n      value: selectedSubjects,\n      onChange: handleChange,\n      input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        id: \"select-multiple-chip\",\n        label: \"Subjects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 20\n      }, this),\n      renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: 0.5\n        },\n        children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n          label: value\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this) // MenuProps={MenuProps}\n      ,\n      children: subjects.map(subject => {\n        /*#__PURE__*/\n        _jsxDEV(MenuItem, {\n          value: subject,\n          children: subject\n        }, subject, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 41\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(SubjectFormField, \"504bzsK63zbgdESILejuIJ1Atms=\");\n\n_c = SubjectFormField;\nexport default SubjectFormField;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubjectFormField\");","map":{"version":3,"sources":["/Users/nat/nology/non-coursework/nats-university/nats-university/src/components/StudentForm/SubjectFormField.jsx"],"names":["React","useState","Field","OutlinedInput","InputLabel","MenuItem","FormControl","Select","Chip","Box","SubjectFormField","selectedSubjects","setSelectedSubjects","subjects","selected","handleChange","event","target","value","split","display","flexWrap","gap","map","subject"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,EAA8CC,WAA9C,EAA2DC,MAA3D,EAAmEC,IAAnE,EAAyEC,GAAzE,QAAmF,eAAnF,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,CAAC,UAAD,EAAa,WAAb,CAAD,CAAxD;AACA,QAAMY,QAAQ,GAAG,CAAC,aAAD,EAAgB,SAAhB,EAA2B,UAA3B,EAAuC,kBAAvC,EAA2D,WAA3D,EAAwE,QAAxE,EAAkF,WAAlF,EAA+F,QAA/F,EAAyG,aAAzG,EAAwH,YAAxH,EAAsI,aAAtI,CAAjB;AACA,QAAMC,QAAQ,GAAG,CAAC,UAAD,EAAa,WAAb,CAAjB,CAH2B,CAK3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,UAAM;AACJC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AADJ,QAEFF,KAFJ;AAGAJ,IAAAA,mBAAmB,CACjB,OAAOM,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACC,KAAN,CAAY,GAAZ,CAA5B,GAA+CD,KAD9B,CAAnB;AAGD,GAPH;;AAQA,sBACI;AAAA,2BACA,QAAC,MAAD;AACI,MAAA,OAAO,EAAC,gBADZ;AAEI,MAAA,EAAE,EAAC,UAFP;AAGI,MAAA,QAAQ,MAHZ;AAII,MAAA,KAAK,EAAEP,gBAJX;AAKI,MAAA,QAAQ,EAAEI,YALd;AAMI,MAAA,KAAK,eAAE,QAAC,aAAD;AAAe,QAAA,EAAE,EAAC,sBAAlB;AAAyC,QAAA,KAAK,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,cANX;AAOI,MAAA,WAAW,EAAGD,QAAD,iBACT,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEM,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,QAAQ,EAAE,MAA7B;AAAqCC,UAAAA,GAAG,EAAE;AAA1C,SAAT;AAAA,kBACKR,QAAQ,CAACS,GAAT,CAAcL,KAAD,iBACd,QAAC,IAAD;AAAkB,UAAA,KAAK,EAAEA;AAAzB,WAAWA,KAAX;AAAA;AAAA;AAAA;AAAA,gBADC;AADL;AAAA;AAAA;AAAA;AAAA,cARR,CAcI;AAdJ;AAAA,gBAgBKL,QAAQ,CAACU,GAAT,CAAcC,OAAD,IAAa;AAAC;AAAA,gBAAC,QAAD;AAAwB,UAAA,KAAK,EAAEA,OAA/B;AAAA,oBAAyCA;AAAzC,WAAeA,OAAf;AAAA;AAAA;AAAA;AAAA;AAA6D,OAAxF;AAhBL;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAkDH,CAzED;;GAAMd,gB;;KAAAA,gB;AA0EN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Field } from \"formik\";\nimport { OutlinedInput, InputLabel, MenuItem, FormControl, Select, Chip, Box} from \"@mui/material\";\n\n// const SubjectFormField = (name, label, helpMessage) => {\n//     return (\n//         <>\n//         <Field name={name}>\n//             {({ field, form, meta }) => (\n                \n//             <Select label={label}>\n//                 <MenuItem>Philosophy</MenuItem>\n//             </Select>\n//             // <TextField\n//             //     {...field}\n//             //     label={label}\n//             //     sx={{ mb: 1, mr: 1 }}\n//             //     error={meta.error && meta.touched}\n//             //     helperText={meta.error && meta.touched && helpMessage}\n//             // />\n            \n\n//             )}\n//         </Field>\n//         </>\n//     )\n// }\n\nconst SubjectFormField = () => {\n    const [selectedSubjects, setSelectedSubjects] = useState([\"Classics\", \"Economics\"])\n    const subjects = [\"Accountancy\", \"Biology\", \"Classics\", \"Creative Writing\", \"Economics\", \"French\", \"Geography\", \"German\", \"Mathematics\", \"Philosophy\", \"Photography\"]\n    const selected = [\"Classics\", \"Economics\"]\n\n    // const ITEM_HEIGHT = 48;\n    // const ITEM_PADDING_TOP = 8;\n    // const MenuProps = {\n    //     PaperProps: {\n    //     style: {\n    //      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n    //      width: 250,\n    //         },\n    //     },\n    // };\n    const handleChange = (event) => {\n        const {\n          target: { value },\n        } = event;\n        setSelectedSubjects(\n          typeof value === 'string' ? value.split(',') : value,\n        );\n      };\n    return (\n        <>\n        <Select \n            labelId=\"subjects-label\"\n            id=\"subjects\"\n            multiple\n            value={selectedSubjects}\n            onChange={handleChange}\n            input={<OutlinedInput id=\"select-multiple-chip\" label=\"Subjects\" />} \n            renderValue={(selected) => (\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                    {selected.map((value) => (\n                    <Chip key={value} label={value} />\n                    ))}\n                </Box>\n                 )}\n            // MenuProps={MenuProps}\n            >\n            {subjects.map((subject) => {<MenuItem key={subject} value={subject}>{subject}</MenuItem>})}\n        </Select>\n\n\n        {/* <Select\n          labelId=\"demo-multiple-chip-label\"\n          id=\"demo-multiple-chip\"\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\n          renderValue={(selected) => (\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n              {selected.map((value) => (\n                <Chip key={value} label={value} />\n              ))}\n            </Box>\n          )}\n          MenuProps={MenuProps}\n        >\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, personName, theme)}\n            >\n              {name}\n            </MenuItem>\n          ))}\n        </Select> */}\n        </>\n    )\n}\nexport default SubjectFormField\n"]},"metadata":{},"sourceType":"module"}