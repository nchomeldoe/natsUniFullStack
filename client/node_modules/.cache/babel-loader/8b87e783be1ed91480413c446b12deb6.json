{"ast":null,"code":"var _jsxFileName = \"/Users/nat/nology/non-coursework/nats-university/nats-university/src/components/StudentView/StudentView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Stack, Box, TextField } from \"@mui/material\";\nimport { useMatch } from \"@reach/router\";\nimport Loader from \"react-loader-spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StudentView = () => {\n  _s();\n\n  const {\n    studentId\n  } = useMatch('/student/:studentId');\n  const [student, setStudent] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:4000/api/students/${studentId}`).then(res => res.json()).then(data => {\n      const studentData = data.student[0];\n      setStudent(studentData);\n    }).catch(error => console.error(error));\n  }, []);\n  const {\n    age,\n    email,\n    firstName,\n    lastName,\n    subjects\n  } = student;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"column\",\n        spacing: 2,\n        sx: {\n          position: \"relative\",\n          top: \"100px\",\n          alignItems: \"center\"\n        },\n        children: student ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Student view\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Puff\",\n          color: \"#00BFFF\",\n          height: 100,\n          width: 100,\n          timeout: 3000 //3 secs\n          ,\n          alignItems: \"center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 78\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), student && /*#__PURE__*/_jsxDEV(Stack, {\n        sx: {\n          position: \"relative\",\n          top: \"100px\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: age\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), subjects && subjects.map(s => /*#__PURE__*/_jsxDEV(TextField, {\n          label: s\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 48\n        }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n          label: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(StudentView, \"ZeaqLm6pLhZieVF+NlE9708fOl8=\", false, function () {\n  return [useMatch];\n});\n\n_c = StudentView;\nexport default StudentView;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentView\");","map":{"version":3,"sources":["/Users/nat/nology/non-coursework/nats-university/nats-university/src/components/StudentView/StudentView.jsx"],"names":["React","useEffect","useState","Container","Typography","Stack","Box","TextField","useMatch","Loader","StudentView","studentId","student","setStudent","fetch","then","res","json","data","studentData","catch","error","console","age","email","firstName","lastName","subjects","position","top","alignItems","map","s"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { Container, Typography,  Stack, Box, TextField} from \"@mui/material\";\nimport { useMatch } from \"@reach/router\";\nimport Loader from \"react-loader-spinner\";\n\nconst StudentView = () => {\n    const {studentId} = useMatch('/student/:studentId');\n    const [student, setStudent] = useState([]);\n\n    useEffect(() => {\n        fetch(`http://localhost:4000/api/students/${studentId}`)\n        .then(res => res.json())\n        .then((data) => {\n        const studentData = data.student[0];\n        setStudent(studentData);\n        })\n        .catch(error => console.error(error));\n        },\n        [])\n\n    const {age, email, firstName, lastName, subjects} = student;\n    \n    return (\n        <>\n        <Container maxWidth=\"md\">\n            <Stack direction=\"column\" spacing={2} sx={{position: \"relative\", top: \"100px\", alignItems:\"center\"}}>\n            {student ? <Typography  variant=\"h5\">Student view</Typography> : <Loader\n                type=\"Puff\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n                timeout={3000} //3 secs\n                alignItems=\"center\"\n            />}\n            </Stack>\n            {student && \n            <Stack sx={{position: \"relative\", top: \"100px\", alignItems:\"center\"}}>\n                <TextField label={firstName} />\n                <TextField label={lastName} />\n                <TextField label={age} />\n                {subjects && subjects.map(s => <TextField label={s} />)}\n                <TextField label={email} />\n            </Stack>}\n        </Container>\n        \n        </>\n    )\n}\n\nexport default StudentView\n"]},"metadata":{},"sourceType":"module"}