{"ast":null,"code":"var _jsxFileName = \"/Users/nat/nology/non-coursework/nats-university/nats-university/src/components/ListView/ListView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Container, Typography, Stack } from \"@mui/material\";\nimport Loader from \"react-loader-spinner\";\nimport { navigate } from \"@reach/router\";\nimport StudentCard from '../StudentCard/StudentCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ListView = () => {\n  _s();\n\n  const [students, setStudents] = useState(null);\n  useEffect(() => {\n    setStudents(null);\n\n    const fetchStudents = async () => {\n      try {\n        const res = await fetch('http://localhost:4000/api/students/');\n\n        if (!res.ok) {\n          throw res;\n        }\n\n        const data = await res.json();\n        const studentData = data.students;\n        console.log(\"student data\", studentData);\n        setStudents(studentData);\n      } catch (err) {\n        return {\n          error: err\n        };\n      }\n    };\n\n    fetchStudents();\n  }, []);\n\n  const handleClick = () => navigate(`/newStudent`);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"column\",\n        spacing: 2,\n        sx: {\n          position: \"relative\",\n          top: \"100px\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClick,\n          variant: \"outlined\",\n          sx: {\n            maxWidth: \"150px\",\n            fontSize: '10px',\n            height: \"auto\"\n          },\n          children: \"Create New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: students ? students.map(student => /*#__PURE__*/_jsxDEV(StudentCard, {\n            student: student\n          }, `student-${student.id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 57\n          }, this)) : /*#__PURE__*/_jsxDEV(Loader, {\n            type: \"Puff\",\n            color: \"#00BFFF\",\n            height: 100,\n            width: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 123\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false); //   return (\n  //     <>\n  //    { students ? <Container maxWidth=\"md\">\n  //         <Stack direction=\"column\" spacing={2} sx={{position: \"relative\", top: \"100px\", alignItems:\"center\"}}>\n  //             <Typography  variant=\"h5\">Students</Typography>\n  //             <Button onClick={handleClick} variant=\"outlined\" sx={{maxWidth:\"150px\", fontSize: '10px', height:\"auto\" }}>Create New</Button>\n  //             <div>\n  //                 {students.map(student => <StudentCard key={`student-${student.id}`} student={student}/>)} \n  //             </div>\n  //         </Stack>\n  //     </Container> :\n  //     <Loader\n  //     type=\"Puff\"\n  //     color=\"#00BFFF\"\n  //     height={100}\n  //     width={100}\n  //   />}\n  //     </>\n  // )\n};\n\n_s(ListView, \"33+PZ6PtnoZxTdTX3qPE8hI384k=\");\n\n_c = ListView;\nexport default ListView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListView\");","map":{"version":3,"sources":["/Users/nat/nology/non-coursework/nats-university/nats-university/src/components/ListView/ListView.jsx"],"names":["React","useEffect","useState","Button","Container","Typography","Stack","Loader","navigate","StudentCard","ListView","students","setStudents","fetchStudents","res","fetch","ok","data","json","studentData","console","log","err","error","handleClick","position","top","alignItems","maxWidth","fontSize","height","map","student","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,UAA5B,EAAyCC,KAAzC,QAAqD,eAArD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAyB,eAAzB;AAGA,OAAOC,WAAP,MAAwB,4BAAxB;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,WAAW,CAAC,IAAD,CAAX;;AACA,UAAMC,aAAa,GAAG,YAAY;AAChC,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAD,CAAvB;;AACA,YAAI,CAACD,GAAG,CAACE,EAAT,EAAa;AACX,gBAAMF,GAAN;AACD;;AACD,cAAMG,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAnB;AACA,cAAMC,WAAW,GAAGF,IAAI,CAACN,QAAzB;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,WAA5B;AACAP,QAAAA,WAAW,CAACO,WAAD,CAAX;AACD,OATD,CASE,OAAOG,GAAP,EAAY;AACZ,eAAO;AAAEC,UAAAA,KAAK,EAAED;AAAT,SAAP;AACD;AACF,KAbD;;AAcAT,IAAAA,aAAa;AACd,GAjBM,EAiBJ,EAjBI,CAAT;;AAmBE,QAAMW,WAAW,GAAG,MAAMhB,QAAQ,CAAE,aAAF,CAAlC;;AAGF,sBACI;AAAA,2BACA,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,QAAjB;AAA0B,QAAA,OAAO,EAAE,CAAnC;AAAsC,QAAA,EAAE,EAAE;AAACiB,UAAAA,QAAQ,EAAE,UAAX;AAAuBC,UAAAA,GAAG,EAAE,OAA5B;AAAqCC,UAAAA,UAAU,EAAC;AAAhD,SAA1C;AAAA,gCACI,QAAC,UAAD;AAAa,UAAA,OAAO,EAAC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEH,WAAjB;AAA8B,UAAA,OAAO,EAAC,UAAtC;AAAiD,UAAA,EAAE,EAAE;AAACI,YAAAA,QAAQ,EAAC,OAAV;AAAmBC,YAAAA,QAAQ,EAAE,MAA7B;AAAqCC,YAAAA,MAAM,EAAC;AAA5C,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBACKnB,QAAQ,GAAGA,QAAQ,CAACoB,GAAT,CAAaC,OAAO,iBAAI,QAAC,WAAD;AAA2C,YAAA,OAAO,EAAEA;AAApD,aAAmB,WAAUA,OAAO,CAACC,EAAG,EAAxC;AAAA;AAAA;AAAA;AAAA,kBAAxB,CAAH,gBAA6F,QAAC,MAAD;AAClH,YAAA,IAAI,EAAC,MAD6G;AAElH,YAAA,KAAK,EAAC,SAF4G;AAGlH,YAAA,MAAM,EAAE,GAH0G;AAIlH,YAAA,KAAK,EAAE;AAJ2G;AAAA;AAAA;AAAA;AAAA;AAD1G;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ,CAzBmB,CA4CrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CA/DD;;GAAMvB,Q;;KAAAA,Q;AAiEN,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { Button, Container, Typography,  Stack} from \"@mui/material\";\nimport Loader from \"react-loader-spinner\";\nimport { navigate } from \"@reach/router\";\n\n\nimport StudentCard from '../StudentCard/StudentCard';\n\nconst ListView = () => {\n\n    const [students, setStudents] = useState(null);\n    useEffect(() => {\n        setStudents(null);\n        const fetchStudents = async () => {\n          try {\n            const res = await fetch('http://localhost:4000/api/students/');\n            if (!res.ok) {\n              throw res;\n            }\n            const data = await res.json();\n            const studentData = data.students;\n            console.log(\"student data\", studentData);\n            setStudents(studentData);\n          } catch (err) {\n            return { error: err };\n          }\n        };\n        fetchStudents();\n      }, []);\n\n      const handleClick = () => navigate(`/newStudent`)\n\n    \n    return (\n        <>\n        <Container maxWidth=\"md\">\n            <Stack direction=\"column\" spacing={2} sx={{position: \"relative\", top: \"100px\", alignItems:\"center\"}}>\n                <Typography  variant=\"h5\">Students</Typography>\n                <Button onClick={handleClick} variant=\"outlined\" sx={{maxWidth:\"150px\", fontSize: '10px', height:\"auto\" }}>Create New</Button>\n                <div>\n                    {students ? students.map(student => <StudentCard key={`student-${student.id}`} student={student}/>) : <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n      />}\n                </div>\n            </Stack>\n        </Container>\n        </>\n    )\n\n  //   return (\n  //     <>\n  //    { students ? <Container maxWidth=\"md\">\n  //         <Stack direction=\"column\" spacing={2} sx={{position: \"relative\", top: \"100px\", alignItems:\"center\"}}>\n  //             <Typography  variant=\"h5\">Students</Typography>\n  //             <Button onClick={handleClick} variant=\"outlined\" sx={{maxWidth:\"150px\", fontSize: '10px', height:\"auto\" }}>Create New</Button>\n  //             <div>\n  //                 {students.map(student => <StudentCard key={`student-${student.id}`} student={student}/>)} \n  //             </div>\n  //         </Stack>\n  //     </Container> :\n  //     <Loader\n  //     type=\"Puff\"\n  //     color=\"#00BFFF\"\n  //     height={100}\n  //     width={100}\n  //   />}\n  //     </>\n  // )\n}\n\nexport default ListView\n"]},"metadata":{},"sourceType":"module"}